name: Check Quality Gate
description: Check the quality gate of the code using SonarCloud
inputs:
  sonar-token:
    description: The SonarCloud token to use for the scan
    required: true
  sonar-project-key:
    description: The SonarCloud project key to use for the scan
    required: true

runs:
  using: "composite"
  steps:
    - name: Execute SonarCloud Qality Gate Check
      shell: bash
      run: |
        echo "Waiting for Quality Gate result..."
          STATUS="PENDING"
          MAX_WAIT=300 # Max wait time in seconds
          WAIT_INTERVAL=10 # Interval between checks in seconds
          WAIT_TIME=0

          while [ "$STATUS" == "PENDING" ] && [ $WAIT_TIME -lt $MAX_WAIT ]; do
            if [ "${{ inputs.pull_request }}" ]; then
              RESPONSE=$(curl -s -u ${{ input.sonar-token }}: "https://sonarcloud.io/api/qualitygates/project_status?projectKey=${{ inputs.project_key }}&pullRequest=${{ inputs.pull_request }}")
            else
              RESPONSE=$(curl -s -u ${{ input.sonar-token }}: "https://sonarcloud.io/api/qualitygates/project_status?projectKey=${{ inputs.project_key }}")
            fi
            STATUS=$(echo $RESPONSE | jq -r '.projectStatus.status')
            if [ "$STATUS" == "OK" ]; then
              echo "Quality Gate passed!"
              exit 0
            elif [ "$STATUS" == "ERROR" ]; then
              echo "Quality Gate failed!"
              echo $RESPONSE | jq
              exit 1
            else
              echo "Analysis not completed yet, waiting..."
              sleep $WAIT_INTERVAL
              WAIT_TIME=$((WAIT_TIME + WAIT_INTERVAL))
            fi
          done

          if [ "$STATUS" == "PENDING" ]; then
            echo "Quality Gate check timed out."
            exit 1
          fi