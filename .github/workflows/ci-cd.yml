name: Main CI/CD workflow

on:
  push:
    branches: 
      - master
  pull_request:
    branches: 
      - master

jobs:
  backend:
    name: Backend Job
    runs-on: ubuntu-latest

    # services:
    #   postgres:
    #     image: postgres:latest
    #     env:
    #       POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
    #       POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
    #       POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
    #       POSTGRES_PORT: ${{ secrets.POSTGRES_PORT}}
    #     ports:
    #       - 5432:5432
    #     options: >-
    #       --health-cmd "pg_isready -U postgres -d bugtracker" 
    #       --health-interval 10s
    #       --health-timeout 5s
    #       --health-retries 5

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: ./.github/actions/checkout-and-setup
        with:
          tool-name: 'java'
          tool-version: '17'
          distribution: 'oracle'
          working-directory: './backend'

      - name: Build and Test
        working-directory: ./backend
        run: mvn clean test package verify

      # - name: Parse Unit Test Report
      #   id: junit-summary
      #   run: |
      #     TESTS=$(grep -oP '(?<=tests=").*?(?=")' backend/target/surefire-reports/TEST*.xml | awk '{s+=$1} END {print s}')
      #     FAILURES=$(grep -oP '(?<=failures=").*?(?=")' backend/target/surefire-reports/TEST*.xml | awk '{s+=$1} END {print s}')
      #     SKIPPED=$(grep -oP '(?<=skipped=").*?(?=")' backend/target/surefire-reports/TEST*.xml | awk '{s+=$1} END {print s}')
      #     ERRORS=$(grep -oP '(?<=errors=").*?(?=")' backend/target/surefire-reports/TEST*.xml | awk '{s+=$1} END {print s}')
      #     SUCCESS=$((TESTS - FAILURES - SKIPPED - ERRORS))
      #     echo "tests=$TESTS" >> $GITHUB_OUTPUT
      #     echo "failures=$FAILURES" >> $GITHUB_OUTPUT
      #     echo "skipped=$SKIPPED" >> $GITHUB_OUTPUT
      #     echo "errors=$ERRORS" >> $GITHUB_OUTPUT
      #     echo "success=$SUCCESS" >> $GITHUB_OUTPUT

      - name: Run Checkstyle
        working-directory: ./backend
        run: mvn checkstyle:checkstyle

      # - name: Parse Checkstyle Report
      #   id: checkstyle-summary
      #   run: |
      #     ERRORS=$(grep -c "<error " backend/target/checkstyle-result.xml)
      #     echo "errors=$ERRORS" >> $GITHUB_OUTPUT

      # - name: Post Summary Comment
      #   uses: marocchino/sticky-pull-request-comment@v2
      #   if: ${{ github.event.pull_request.number != '' }}
      #   with:
      #     message: |
      #       ### 🧪 Unit Test Report
      #       - **📊 Total Tests**: ${{ steps.junit-summary.outputs.tests }}
      #       - **✅ Successful Tests**: ${{ steps.junit-summary.outputs.success }}
      #       - **❌ Fail Tests**: ${{ steps.junit-summary.outputs.failures }}
      #       - **⚠️ Skipped Tests**: ${{ steps.junit-summary.outputs.skipped }}

      - name: Publish Backend Unit Test Report
        uses: turing85/publish-report@v2
        with:
          comment-header: 
          comment-message-success: |
            ##🧪 Backend Unit Test Report ##
            <details>
              <summary><h3>🎉 {0} passed</h3></summary>

              <h4>🧪 Unit Tests Results </h4>

              | Passed | Failed | Skipped |
              |--------|--------|---------|
              | ✅ {1} | ❌ {2} | ⚠️ {3}   |

              You can see the report [here]({4}).
            </details>
          comment-message-failure: |
            <details>
              <summary><h3>⛈️ {0} failed</h3></summary>

              <h4>🧪 Unit Tests Results </h4>

              | Passed | Failed | Skipped |
              |--------|--------|---------|
              | ✅ {1} | ❌ {2} | ⚠️ {3}   |

              You can see the report [here]({4}).
            </details>
          report-fail-on-error: true
          report-name: Backend Unit Tests
          report-path: 'backend/target/surefire-reports/TEST*.xml'

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: './backend'
          args: >
            -Dsonar.projectKey=ro.alexportfolio:backend 
            -Dsonar.organization=bugtracker 
            -Dsonar.host.url=https://sonarcloud.io 
            -Dsonar.token=$SONAR_TOKEN
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml 
            -Dsonar.java.checkstyle.reportPaths=target/checkstyle-result.xml
            -Dsonar.java.binaries=target/classes

      - name: SonarCloud Quality Gate
        uses: ./.github/actions/check-quality-gate
        with:
          sonar-token: ${{ secrets.SONAR_TOKEN }}
          sonar-project-key: ro.alexportfolio:backend
          if: ${{ github.event.pull_request.number != '' }}
          pull_request: ${{ github.event.pull_request.number }}

  frontend:
    name: Frontend Job
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
  
      - name: Setup Node
        uses: ./.github/actions/checkout-and-setup
        with:
          tool-name: 'node'
          tool-version: '22.12.0'
          working-directory: './frontend'

      - name: Lint Code
        run: npm run lint
        working-directory: ./frontend

      - name: Run Unit Tests
        run: npm test -- --watch=false --browsers=ChromeHeadless --code-coverage
        working-directory: frontend

      - name: Publish Frontend Unit Tests Report
        uses: turing85/publish-report@v2
        with:
          comment-header: 🧪 Frontend Unit Test Report
          comment-message-success: |
            <details>
              <summary><h3>🎉 {0} passed</h3></summary>

              <h4>🧪 Unit Tests Results </h4>

              | Passed | Failed | Skipped |
              |--------|--------|---------|
              | ✅ {1} | ❌ {2} | ⚠️ {3}   |

              You can see the report [here]({4}).
            </details>
          comment-message-failure: |
            <details>
              <summary><h3>⛈️ {0} failed</h3></summary>

              <h4>🧪 Unit Tests Results </h4>

              | Passed | Failed | Skipped |
              |--------|--------|---------|
              | ✅ {1} | ❌ {2} | ⚠️ {3}   |

              You can see the report [here]({4}).
            </details>
          report-fail-on-error: true
          report-name: Frontend Unit Tests
          report-path: 'frontend/test-results/unit-test-results.xml'
      
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: './frontend'
          args: >
            -Dsonar.projectKey=bugtracker_frontend 
            -Dsonar.organization=bugtracker 
            -Dsonar.host.url=https://sonarcloud.io 
            -Dsonar.flex.cobertura.reportPaths=coverage/cobertura-coverage.xml 
            -Dsonar.token=$SONAR_TOKEN
            -Dsonar.eslint.reportPaths=eslint-report.json
        
      - name: SonarCloud Quality Gate
        uses: ./.github/actions/check-quality-gate
        with:
          sonar-token: ${{ secrets.SONAR_TOKEN }}
          sonar-project-key: bugtracker_frontend
          if: ${{ github.event.pull_request.number != '' }}
          pull_request: ${{ github.event.pull_request.number }}
